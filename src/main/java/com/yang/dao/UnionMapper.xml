<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.dao.UnionMapper">
    <select id="getTickets" resultType="ticket">
        select concat(c2.CityName, '/', c2.CityCode) `from`,
        concat(c1.CityName, '/', c1.CityCode) `to`,
        s.FlightNumber flightNumber,
        s.Date depDate,
        s.EconomyPrice price,
        c.CabinTypeId cabinTypeId,
        r.FlightTime flightTime,
        s.Time depTime,
        s.ScheduleId schedulleId
        from schedule s
        join route r on s.RouteId = r.RouteId
        join city c1 on r.ArrivalAirportIATA = c1.CityCode
        join city c2 on r.DepartureAirportIATA = c2.CityCode
        join aircraft a on s.AircraftId = a.AircraftId
        join seatlayout s2 on a.AircraftId = s2.AircraftId
        join cabintype c on s2.CabinTypeId = c.CabinTypeId
        <where>
            <if test="from != null">
                c2.CityName = #{from}
            </if>
            <if test="to != null">
                and c1.CityName = #{to}
            </if>
            <if test="date != null">
                and s.Date = #{date}
            </if>
        </where>
    </select>
    <select id="getBookedSeats" resultType="int">
        select count(f.CabinTypeId) cabinTypeCount
        from flightreservation f
        join schedule s on f.ScheduleId = s.ScheduleId
        <where>
            <if test="date != null">
                s.Date = #{date}
            </if>
            and s.ScheduleId = #{scheduleId}
        </where>
        group by f.CabinTypeId
    </select>
    <select id="getFlightInfo" resultType="flightInfo">
        select f.ReservationId reservationId,
        s.FlightNumber flightNumber,
        r.DepartureAirportIATA `from`,
        r.ArrivalAirportIATA `to`,
        concat(s.Date,' ', s.Time) `date`,
        ca.CabinTypeName cabinType
        from flightreservation f
        join cabintype ca on f.CabinTypeId = ca.CabinTypeId
        join schedule s on f.ScheduleId = s.ScheduleId
        join route r on s.RouteId = r.RouteId
        <where>
            <if test="idType != null">
                f.IDType = #{idType}
            </if>
            <if test="idTypeNumber != null">
                and f.IDTypeNumber = #{idTypeNumber}
            </if>
        </where>
    </select>
    <select id="getFlightStatus" resultType="flightStatusInfo">
        select s.FlightNumber flightNumber,
               concat(r.DepartureAirportIATA, '/', c1.CityName) `from`,
               concat(r.ArrivalAirportIATA, '/', c2.CityName)   `to`,
               DATE_FORMAT(concat(s.Date, ' ', s.Time), '%Y-%m-%d %H:%i:%S')                      scheduleStart,
               DATE_FORMAT(date_add(concat(s.Date, ' ', s.Time), interval r.FlightTime MINUTE),'%Y-%m-%d %H:%i:%S') scheduleArrival,
               DATE_FORMAT(f.ActualArrivalTime, '%Y-%m-%d %H:%i:%S')                              actualArrival,
               s.Gate                                           gate,
                timestampdiff(MINUTE, f.ActualArrivalTime ,date_add(concat(s.Date, ' ', s.Time), interval r.FlightTime MINUTE)) status
        from schedule s
             join route r on s.RouteId = r.RouteId
             join city c1 on r.DepartureAirportIATA = c1.CityCode
             join city c2 on r.ArrivalAirportIATA = c2.CityCode
             join flightstatus f on s.ScheduleId = f.ScheduleId
         where s.Date = #{depDate}
    </select>

    <select id="getFlightSchedule" resultType="flightScheduleInfo" parameterType="map">
        select s.Date                                               date,
               date_format(concat(s.Date, ' ', s.Time), '%H:%i:%S') time,
               concat(r.DepartureAirportIATA, '/', c1.CityName)     `from`,
               concat(r.ArrivalAirportIATA, '/', c2.CityName)       `to`,
                ai.Name                                               aircraft,
               s.EconomyPrice                                       economyPrice,
               s.FlightNumber                                       flightNumber,
               s.Gate                                               gate,
               s.Status                                             status
        from schedule s
             join aircraft ai on s.AircraftId = ai.AircraftId
             join route r on s.RouteId = r.RouteId
             join city c1 on r.DepartureAirportIATA = c1.CityCode
             join city c2 on r.ArrivalAirportIATA = c2.CityCode
            join airport a1 on c1.CityCode = a1.CityCode
            join airport a2 on c2.CityCode = a2.CityCode
         <where>
             <if test="cFrom != null">
                c1.CityName = #{cFrom}
             </if>
             <if test="cTo != null">
                 and c2.CityName = #{cTo}
             </if>
             <if test="aFrom != null">
                 and a1.IATACode = #{aFrom}
             </if>
             <if test="aTo != null">
                 and a2.IATACode = #{aTo}
             </if>
             <if test="date != null">
                 and s.Date = #{date}
             </if>
         </where>
    </select>
</mapper>